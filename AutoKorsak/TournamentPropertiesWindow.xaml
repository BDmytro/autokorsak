<Window x:Class="AutoKorsak.TournamentPropertiesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:jas="clr-namespace:WPF.JoshSmith.ServiceProviders.UI" 
        Title="Tournament properties" Height="478" Width="549" Name="properties" Initialized="form_Initialized" Closing="form_Closing">
    <Window.Resources>
        <Style x:Key="ItemContStyle" TargetType="ListViewItem">
            <Style.Resources>
                <LinearGradientBrush x:Key="MouseOverBrush" StartPoint="0.5, 0" EndPoint="0.5, 1">
                    <GradientStop Color="#22000000" Offset="0" />
                    <GradientStop Color="#44000000" Offset="0.4" />
                    <GradientStop Color="#55000000" Offset="0.6" />
                    <GradientStop Color="#33000000" Offset="0.9" />
                    <GradientStop Color="#22000000" Offset="1" />
                </LinearGradientBrush>
            </Style.Resources>
            <Setter Property="Padding" Value="0,4" />
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
            <!-- The default control template for ListViewItem has a Border 
           which contains the item's content. -->
            <Setter Property="Border.BorderThickness" Value="0,0,0,0.5" />
            <Setter Property="Border.BorderBrush" Value="LightGray" />
            <!-- These triggers react to changes in the attached properties set
           during a managed drag-drop operation. -->
            <Style.Triggers>
                <Trigger Property="jas:ListViewItemDragState.IsBeingDragged" Value="True">
                    <Setter Property="FontWeight" Value="DemiBold" />
                </Trigger>
                <Trigger Property="jas:ListViewItemDragState.IsUnderDragCursor" Value="True">
                    <Setter Property="Background" Value="{StaticResource MouseOverBrush}" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid Name="grdMain">
        <DockPanel>
            <Border Margin="10,10,10,20">
                <TabControl HorizontalAlignment="Stretch" Margin="0,0,0,27" Name="tcMain" VerticalAlignment="Stretch">
                    <TabItem Header="{Binding Capt.Main}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border Name="pnlMainProps" BorderBrush="Silver" BorderThickness="1" Margin="6" >
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                    <StackPanel Margin="10">
                                    <TextBlock Text="{Binding Capt.TournamentName}"/>
                                        <TextBox Text="{Binding Name}" Margin="0,0,0,10"/>

                                    <TextBlock Text="{Binding Capt.Description}"/>
                                        <TextBox Text="{Binding Description}" TextWrapping="Wrap" AcceptsReturn="True" Height="Auto" Margin="0,0,0,10"/>

                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                        <StackPanel  Margin="0,0,10,0" Grid.Row="0" Grid.Column="0">
                                            <TextBlock Text="{Binding Capt.BoardSize}" TextWrapping="Wrap"/>
                                            <ComboBox IsEditable="False" Name="cmbBoardsize" SelectedItem="{Binding BoardSizeText}" ItemsSource="{Binding BoardSizes}" IsSynchronizedWithCurrentItem="True">
                                            </ComboBox>

                                            <TextBlock Margin="0,10,0,0"  Text="{Binding Capt.TournamentSystem}" TextWrapping="Wrap"/>
                                            <Grid Margin="0,0,0,0">
                                                <Grid.RowDefinitions>
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                    <RowDefinition />
                                                </Grid.RowDefinitions>
                                                <RadioButton Content="{Binding Capt.RoundRobin}" IsChecked="{Binding TournamentSystemRound}" Grid.Row="0" Margin="2" Click="RadioButton_Click">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.Scheveningen}" IsChecked="{Binding TournamentSystemScheveningen}" Grid.Row="1" Margin="2" Click="RadioButton_Click">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.Swiss}" IsChecked="{Binding TournamentSystemSwiss}" Grid.Row="2" Margin="2" Click="RadioButton_Click">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.McMahon}" IsChecked="{Binding TournamentSystemMcMahon}" Grid.Row="3" Margin="2" Click="RadioButton_Click">
                                                </RadioButton>
                                            </Grid>

                                        </StackPanel>
                                        <StackPanel  Margin="10,0,0,0" Grid.Row="0" Grid.Column="1">
                                            <TextBlock Margin="0,0,0,0"  Text="{Binding Capt.FirsMoveColor}" TextWrapping="Wrap"/>
                                            <WrapPanel Margin="0,0,0,2">
                                                <RadioButton Content="{Binding Capt.Black}" IsChecked="{Binding FirstMoveBlack}" Margin="2">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.White}" IsChecked="{Binding FirstMoveWhite}" Margin="2">
                                                </RadioButton>
                                            </WrapPanel>

                                            <TextBlock Name="lblNumberOfRounds" Margin="0,2,0,0" IsEnabled="{Binding ManualRoundAmountAllowed}" Text="{Binding Capt.NumberOfRounds}" TextWrapping="Wrap"/>
                                            <TextBox Name="txtNumberOfRounds"  IsEnabled="{Binding ManualRoundAmountAllowed}" Text="{Binding NumberOfRounds}" Margin="0,0,0,10"/>

                                            <TextBlock Name="lblNumberOfPlayers" Margin="0,2,0,0" IsEnabled="{Binding ManualPlayersAmountAllowed}" Text="{Binding Capt.NumberOfPlayers}" TextWrapping="Wrap"/>
                                            <TextBox Name="txtNumberOfPlayers" IsEnabled="{Binding ManualPlayersAmountAllowed}" Text="{Binding NumberOfPlayers}" Margin="0,0,0,10"/>

                                            <TextBlock Name="lblNumberOfTeamPlayers" Margin="0,2,0,0" IsEnabled="{Binding ManualTeamPlayersAmountAllowed}" Text="{Binding Capt.NumberOfTeamPlayers}" TextWrapping="Wrap"/>
                                            <TextBox Name="txtNumberOfTeamPlayers" IsEnabled="{Binding ManualTeamPlayersAmountAllowed}" Text="{Binding NumberOfTeamPlayers}" Margin="0,0,0,10"/>

                                            <CheckBox IsChecked="{Binding HandicapUsed}" Click="CheckBox_Click">
                                                <TextBlock Text="{Binding Capt.UseHandicap}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding AllowJigo}">
                                                <TextBlock Text="{Binding Capt.AllowJigo}" TextWrapping="Wrap"/>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding RatingDeterminesRank}">
                                                <TextBlock Text="{Binding Capt.RatingDeterminesRank}" TextWrapping="Wrap"/>
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding CustomizeCalculation}" Click="CheckBox_Click">
                                                <TextBlock Text="{Binding Capt.CustomizeCalculation}" TextWrapping="Wrap"/>
                                            </CheckBox>
                                            <!--CheckBox IsChecked="{Binding UseTransliteration}">
                                                <TextBlock Text="{Binding Capt.TransliterationSupport}" TextWrapping="Wrap"/>
                                            </CheckBox-->


                                        </StackPanel>
                                        </Grid>
                                    </StackPanel>
                            </ScrollViewer>
                        </Border>
                    </TabItem>

                    <TabItem Name="tabGroups" Header="{Binding Capt.Groups}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border BorderBrush="Silver" BorderThickness="1" Margin="6" >
                            <ScrollViewer VerticalScrollBarVisibility="Auto">
                                <StackPanel Margin="10">

                                    <CheckBox IsChecked="{Binding UpperMacMahonBar}" IsEnabled="{Binding UseMacMahonStartScores}">
                                        <TextBlock Text="{Binding Capt.UpperMacMahonBar}" TextWrapping="Wrap"/>
                                    </CheckBox>
                                    <Grid Margin="0,0,0,10">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition />
                                            <ColumnDefinition />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition />
                                            <RowDefinition />
                                        </Grid.RowDefinitions>
                                        <RadioButton Content="{Binding Capt.ByAmount}" IsEnabled="{Binding UpperMacMahonBar}" IsChecked="{Binding UpperMacMahonBarByAmount}" Grid.Row="0" Grid.Column="0" Margin="2">
                                        </RadioButton>
                                        <TextBox Text="{Binding UpperMacMahonBarAmount}" IsEnabled="{Binding UpperMacMahonBar}" Grid.Row="0" Grid.Column="1"/>
                                        <RadioButton Content="{Binding Capt.ByLevel}" IsEnabled="{Binding UpperMacMahonBar}" IsChecked="{Binding UpperMacMahonBarByLevel}" Grid.Row="1" Grid.Column="0" Margin="2">
                                        </RadioButton>
                                        <TextBox Text="{Binding UpperMacMahonBarLevelExt}" IsEnabled="{Binding UpperMacMahonBar}" Grid.Row="1" Grid.Column="1"/>
                                    </Grid>

                                    <CheckBox IsChecked="{Binding LowerMacMahonBar}" IsEnabled="{Binding UseMacMahonStartScores}">
                                        <TextBlock Text="{Binding Capt.LowerMacMahonBar}" TextWrapping="Wrap"/>
                                    </CheckBox>
                                    <TextBox Text="{Binding LowerMacMahonBarLevelExt}" IsEnabled="{Binding LowerMacMahonBar}" Margin="0,0,0,10"/>

                                    <!--CheckBox IsChecked="{Binding UseMacMahonStartScores}">
                                                <TextBlock Text="{Binding Capt.MacMahonStartScores}" TextWrapping="Wrap"/>
                                            </CheckBox-->
                                    <CheckBox IsChecked="{Binding UseMacMahonStartScoresWithoutGapsInSequence}" IsEnabled="{Binding UseMacMahonStartScores}">
                                        <TextBlock Text="{Binding Capt.StartScoresWithoutGaps}" TextWrapping="Wrap"/>
                                    </CheckBox>

                                    <CheckBox IsChecked="{Binding UseMacMahonSuperBar}" IsEnabled="{Binding UseMacMahonStartScores}">
                                        <TextBlock Text="{Binding Capt.UseSupergroup}" TextWrapping="Wrap"/>
                                    </CheckBox>

                                    <CheckBox IsChecked="{Binding UseMacMahonStartScoresManually}" IsEnabled="{Binding UseMacMahonStartScores}">
                                        <TextBlock Text="{Binding Capt.SetStartScoresManually}" TextWrapping="Wrap"/>
                                    </CheckBox>

                                </StackPanel>
                            </ScrollViewer>
                        </Border>
                    </TabItem>

                    <TabItem Header="{Binding Capt.PlacementCriteria}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border Name="pnlPlacementCriteria" BorderBrush="Silver" BorderThickness="1" Margin="6" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0">
                                    <StackPanel Margin="6">
                                        <ListView Name="lvSortCriterion"
                                            ItemContainerStyle="{StaticResource ItemContStyle}"
                                            >
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="{Binding Capt.Active}">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox IsChecked="{Binding Active}" IsEnabled="{Binding Enabled}" HorizontalAlignment="Center" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="{Binding Capt.Column}" DisplayMemberBinding="{Binding DisplayName}" />
                                                    <GridViewColumn Header="{Binding Capt.Description}" DisplayMemberBinding="{Binding Name}" />
                                                </GridView>
                                            </ListView.View>
                                        </ListView>

                                        <!--Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <TextBlock Text="{Binding Capt.Active}"  Grid.Column="0" Grid.Row="0" />
                                            <ListBox Name="lbCriteria" Grid.Column="0" Grid.Row="1" 
                                             PreviewMouseLeftButtonDown="lbCriteria_PreviewMouseLeftButtonDown"
                                             AllowDrop="True" 
                                             Drop="lbCriteria_Drop">
                                            </ListBox>
                                            <TextBlock Text="{Binding Capt.Available}"  Grid.Column="1" Grid.Row="0" />
                                            <ListBox Name="lbCriteriaAll"  Grid.Column="1" Grid.Row="1" 
                                             PreviewMouseLeftButtonDown="lbCriteria_PreviewMouseLeftButtonDown"
                                             AllowDrop="True"
                                             Drop="lbCriteria_Drop">
                                            </ListBox>
                                        </Grid -->
                                    </StackPanel>
                                </ScrollViewer>
                                <StackPanel Margin="10,10,10,10" Grid.Column="0" Grid.Row="1" >
                                    <Separator />
                                    <TextBlock Text="{Binding Capt.Hint}" />
                                </StackPanel>
                            </Grid>
                        </Border>
                    </TabItem>

                    <TabItem Header="{Binding Capt.WallList}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                            <Border Name="pnlWallList" BorderBrush="Silver" BorderThickness="1" Margin="6" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100*"/>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                
                                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0">
                                <StackPanel Margin="6" >
                                        <ListView Name="lvWallList" ItemContainerStyle="{StaticResource ItemContStyle}" 
                                            >
                                            <ListView.View>
                                                <GridView>
                                                    <GridViewColumn Header="{Binding Capt.Active}">
                                                        <GridViewColumn.CellTemplate>
                                                            <DataTemplate>
                                                                <CheckBox IsChecked="{Binding Active}" IsEnabled="{Binding Enabled}" HorizontalAlignment="Center" />
                                                            </DataTemplate>
                                                        </GridViewColumn.CellTemplate>
                                                    </GridViewColumn>
                                                    <GridViewColumn Header="{Binding Capt.Column}" DisplayMemberBinding="{Binding DisplayName}"/>
                                                    <GridViewColumn Header="{Binding Capt.Description}" DisplayMemberBinding="{Binding Name}"/>
                                                </GridView>
                                            </ListView.View>
                                        </ListView>
                                </StackPanel>
                                </ScrollViewer>
                                <StackPanel Margin="10,2" Grid.Column="0" Grid.Row="1" >
                                    <CheckBox Content="{Binding Capt.ShowColors}" IsChecked="{Binding Walllist.ShowColors}" />
                                    <CheckBox Content="{Binding Capt.HideEmptyColumns}" IsChecked="{Binding Walllist.HideEmptyColumns}" />
                                </StackPanel>
                                <StackPanel Margin="10,10,10,10" Grid.Column="0" Grid.Row="2" >
                                    <Separator />
                                    <TextBlock Text="{Binding Capt.Hint}" />
                                </StackPanel>
                            </Grid>
                        </Border>

                    </TabItem>
                    <TabItem Name="tabRestrictions"  Header="{Binding Capt.PairingRestrictions}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border Name="pnlRestrictions" BorderBrush="Silver" BorderThickness="1" Margin="6" >
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="100*"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <ScrollViewer VerticalScrollBarVisibility="Auto" Grid.Column="0" Grid.Row="0">
                                    <StackPanel Margin="6">
                                        <TextBlock Text="{Binding Capt.DoNotPair}" TextWrapping="Wrap" />
                                        <StackPanel Margin="10,2">

                                            <CheckBox Content="{Binding Capt.SameCountry}" IsChecked="{Binding MakePairingOutsideTopGroupSameCountry}" />
                                    <CheckBox Content="{Binding Capt.SameClub}" IsChecked="{Binding MakePairingOutsideTopGroupSameClub}" />
                                    <CheckBox Content="{Binding Capt.SameNationality}" IsChecked="{Binding MakePairingOutsideTopGroupSameNationality}" />
                                    <CheckBox Content="{Binding Capt.SameTeam}" IsChecked="{Binding MakePairingOutsideTopGroupSameTeam}" />
                                    <CheckBox Content="{Binding Capt.SameCoach}" IsChecked="{Binding MakePairingOutsideTopGroupSameCoach}" />
                                            </StackPanel>
                                    </StackPanel>
                            </ScrollViewer>
                            <StackPanel Margin="10,10,10,10" Grid.Column="0" Grid.Row="1" >
                                <Separator />
                                    <TextBlock Text="{Binding Capt.Hint2}" />
                            </StackPanel>
                            </Grid>
                        </Border>
                    </TabItem>
                    <TabItem Name="tabHandicap" Header="{Binding Capt.Handicap}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100*"/>
                                <!-- RowDefinition MinHeight="34" Height="38"/ -->
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0">

                                <Border Name="pnlHandicap" BorderBrush="Silver" BorderThickness="1" Margin="6">

                                    <ScrollViewer VerticalScrollBarVisibility="Auto">

                                        <StackPanel IsEnabled="{Binding HandicapUsed}" Margin="10">
                                            <TextBlock Text="{Binding Capt.HandicapCalculationCase}" TextWrapping="Wrap" />
                                            <WrapPanel Margin="10,2">
                                                <RadioButton Content="{Binding Capt.PlayersRanks}" IsChecked="{Binding HandicapByLevel}" Margin="10,2">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.PlayersRatings}" IsChecked="{Binding HandicapByRating}" Margin="10,2">
                                                </RadioButton>
                                                <RadioButton Content="{Binding Capt.PlayersPoints}" IsChecked="{Binding HandicapByPoints}" Margin="10,2">
                                                </RadioButton>
                                            </WrapPanel>
                                            
                                            <CheckBox IsChecked="{Binding HandicapBelow}" >
                                                <TextBlock Text="{Binding Capt.BelowLevel}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            
                                            <TextBox Text="{Binding HandicapBelowLevel}" IsEnabled="{Binding HandicapBelow}" Margin="0,0,0,10"/>
                                            <CheckBox IsChecked="{Binding HandicapAdjustment}">
                                                <TextBlock Text="{Binding Capt.AdjustBy}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            <TextBox Text="{Binding HandicapAdjustmentValue}" IsEnabled="{Binding HandicapAdjustment}" Margin="0,0,0,10"/>
                                            <CheckBox IsChecked="{Binding HandicapLimit}">
                                                <TextBlock Text="{Binding Capt.HandicapLimit}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            <TextBox Text="{Binding HandicapLimitValue}"  IsEnabled="{Binding HandicapLimit}" Margin="0,0,0,10"/>

                                            <CheckBox IsChecked="{Binding HandicapAdditionalKomi}">
                                                <TextBlock Text="{Binding Capt.CalculateAdditionalKomi}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding HandicapIncludeInTieBreakers}">
                                                <TextBlock Text="{Binding Capt.IncludeHandicap}" TextWrapping="Wrap" />
                                            </CheckBox>
                                            <CheckBox IsChecked="{Binding HandicapDisplayInKomi}">
                                                <TextBlock Text="{Binding Capt.DisplayHadicapInComi}" TextWrapping="Wrap" />
                                            </CheckBox>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>

                            </DockPanel>
                            <DockPanel VerticalAlignment="Bottom" Grid.Row="1" Visibility="Collapsed">
                                <Border Name="pnlHandicapButtons" BorderBrush="Silver" BorderThickness="1" Margin="6">
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="0,2" HorizontalAlignment="Left">
                                        <CheckBox IsChecked="{Binding HandicapUsed}" Margin="10,2,10,2">
                                            <TextBlock Text="{Binding Capt.UseHandicap}" TextWrapping="Wrap" />
                                        </CheckBox>
                                    </StackPanel>
                                </Border>
                            </DockPanel>
                        </Grid>
                    </TabItem>
                    <TabItem Name="tabCalculation" Header="{Binding Capt.Calculation}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="100*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <DockPanel Grid.Row="0">
                                <Border Name="pnlCalculation" BorderBrush="Silver" BorderThickness="1" Margin="6">
                                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                                        <StackPanel Margin="6">
                                            <TextBlock Text="{Binding Capt.ForRoundsSkipping}" TextWrapping="Wrap" />
                                            <StackPanel Margin="10,2">
                                                <TextBlock Text="{Binding Capt.ScoreDescr}" TextWrapping="Wrap" />
                                                <StackPanel Margin="10,2" IsEnabled="{Binding CalculationScore}">
                                                    <RadioButton Content="{Binding Capt.AddHalfPoint}" IsChecked="{Binding CalculationScoreAddHalf}" Margin="10,2">
                                                    </RadioButton>
                                                    <RadioButton Content="{Binding Capt.AlternatePoints}" IsChecked="{Binding CalculationScoreAddAlternate}" Margin="10,2">
                                                    </RadioButton>
                                                    <RadioButton Content="{Binding Capt.AddNothing}" IsChecked="{Binding CalculationScoreAddNothing}" Margin="10,2">
                                                    </RadioButton>
                                                </StackPanel>
                                                <CheckBox IsChecked="{Binding CalculationScoreZeroToOwnCoefs}" Margin="0,2,10,2">
                                                    <TextBlock Text="{Binding Capt.AddZeroToSelfCoefs}" TextWrapping="Wrap" />
                                                </CheckBox>
                                                <CheckBox IsChecked="{Binding CalculationScoreMaxToCompetitorCoefs}" Margin="0,2,10,2">
                                                    <TextBlock Text="{Binding Capt.AddMaximumToCompetitorCoefs}" TextWrapping="Wrap" />
                                                </CheckBox>
                                            </StackPanel>
                                        </StackPanel>
                                    </ScrollViewer>
                                </Border>
                            </DockPanel>
                            <DockPanel VerticalAlignment="Bottom" Grid.Row="1">
                                <Border Name="pnlCalculationButtons" BorderBrush="Silver" BorderThickness="1" Margin="6">
                                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="0,2" HorizontalAlignment="Left">
                                        <CheckBox IsChecked="{Binding CustomizeForTopGroupOnly}" Margin="10,2,10,2">
                                            <TextBlock Text="{Binding Capt.TopGroupOnly}" TextWrapping="Wrap" />
                                        </CheckBox>
                                    </StackPanel>
                                </Border>
                            </DockPanel>
                        </Grid>

                    </TabItem>
                </TabControl>
            </Border>
        </DockPanel>
        <DockPanel VerticalAlignment="Bottom">
            <Border Name="pnlButtons" BorderBrush="Silver" BorderThickness="1" Margin="10,10,10,10">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="100"/>
                        <ColumnDefinition Width="100*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="0,2" HorizontalAlignment="Right" Grid.Column="1">
                        <Button Content="{Binding Capt.Ok}" MinWidth="60" Command="{Binding GiveItemCommand}" Margin="0,2,10,2"  Click="btnOk_Click" IsDefault="True" Padding="10,0" />
                        <Button Content="{Binding Capt.Cancel}" MinWidth="60" Command="{Binding GetItemCommand}" Margin="0,2,10,2" Click="btnCancel_Click" IsCancel="True" Padding="10,0" />
                        <Button Content="{Binding Capt.Apply}" MinWidth="60" Command="{Binding GiveItemCommand}" Margin="0,2,10,2"  Click="btnApply_Click" Padding="10,0" />
                    </StackPanel>
                    <StackPanel Orientation="Horizontal" VerticalAlignment="Stretch" Margin="0,2" HorizontalAlignment="Right" Grid.Column="0">
                        <Button Name="btnAssistant" Content="{Binding Capt.Assistant}" Command="{Binding GiveItemCommand}" Margin="0,2,10,2"  Click="btnAssistant_Click" IsDefault="False" Padding="10,0" />
                    </StackPanel>
                </Grid>
            </Border>
        </DockPanel>

    </Grid>
</Window>
